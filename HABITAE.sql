CREATE DATABASE IF NOT EXISTS HABITAE;
USE HABITAE;

-- 1. TABELA EMPRESA (CNPJ como VARCHAR para preservar zeros)
CREATE TABLE EMPRESA (
    CNPJ VARCHAR(14) PRIMARY KEY,
    NOME VARCHAR(30) NOT NULL,
    TELEFONE VARCHAR(15) NOT NULL,
    EMAIL VARCHAR(60) NOT NULL,
    ENDERECO_FISICO VARCHAR(30) NOT NULL
);

-- 2. TABELA PROPRIETARIO 
CREATE TABLE PROPRIETARIO (
    CPF VARCHAR(11) PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    TELEFONE VARCHAR(15) NOT NULL
);

-- 3. TABELA ENDERECO 
CREATE TABLE ENDERECO (
    ID_ENDERECO INT PRIMARY KEY AUTO_INCREMENT,
    CEP CHAR(8) NOT NULL,
    RUA VARCHAR(100) NOT NULL,
    NUMERO INT NOT NULL,
    COMPLEMENTO VARCHAR(100),
    CIDADE VARCHAR(50) NOT NULL,
    ESTADO CHAR(2) NOT NULL
);

-- 4. TABELA IMOVEL (sem FKs inicialmente)
CREATE TABLE IMOVEL (
    ID_IMOVEL INT PRIMARY KEY AUTO_INCREMENT,
    CNPJ VARCHAR(14) NOT NULL,
    ID_ENDERECO INT NOT NULL,
    CPF_PROPRIETARIO VARCHAR(11) NOT NULL,
    INTENCAO ENUM('Venda', 'Aluguel') NOT NULL,
    TIPO ENUM('Apartamento', 'Casa', 'Comercial') NOT NULL,
    DESCRICAO VARCHAR(255)
);

-- 5. TABELA USUARIO 
CREATE TABLE USUARIO (
    CPF VARCHAR(11) PRIMARY KEY,
    NOME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(50) UNIQUE NOT NULL,
    TELEFONE VARCHAR(15) NOT NULL
);

-- 6. TABELA RESERVA (sem FKs inicialmente)
CREATE TABLE RESERVA (
    ID_RESERVA INT PRIMARY KEY AUTO_INCREMENT,
    CPF_USUARIO VARCHAR(11) NOT NULL,
    ID_IMOVEL INT NOT NULL,
    CHECKIN DATE NOT NULL,
    CHECKOUT DATE NOT NULL,
    CONSTRAINT check_dates CHECK (CHECKOUT > CHECKIN)
);

-- 7. TABELA PAGAMENTO (sem FKs inicialmente)
CREATE TABLE PAGAMENTO (
    ID_PAGAMENTO INT PRIMARY KEY AUTO_INCREMENT,
    ID_RESERVA INT NOT NULL,
    VALOR DECIMAL(10,2) NOT NULL,
    DATA_PAGAMENTO DATE NOT NULL,
    TIPO ENUM('PIX', 'Cartão de Débito', 'Cartão de Crédito', 'Boleto', 'Dinheiro') NOT NULL
);

-- 8. TABELA NOTA_FISCAL (sem FKs inicialmente)
CREATE TABLE NOTA_FISCAL (
    ID_NOTA INT PRIMARY KEY AUTO_INCREMENT,
    ID_PAGAMENTO INT NOT NULL,
    DATA_EMISSAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 9. TABELA FUNCIONARIO (sem FKs inicialmente)
CREATE TABLE FUNCIONARIO (
    ID_FUNCIONARIO INT PRIMARY KEY AUTO_INCREMENT,
    CNPJ VARCHAR(14) NOT NULL,
    CPF VARCHAR(11) UNIQUE NOT NULL,
    NOME VARCHAR(30) NOT NULL,
    TELEFONE VARCHAR(14) NOT NULL
);

-- 10. TABELA ANUNCIO (sem FKs inicialmente)
CREATE TABLE ANUNCIO (
    ID_ANUNCIO INT PRIMARY KEY AUTO_INCREMENT,
    CNPJ VARCHAR(14) NOT NULL,
    ID_IMOVEL INT NOT NULL,
    REDE ENUM('Online','Impresso','Tv','Outdoor') NOT NULL,
    DESCRICAO VARCHAR(100),
    VALOR DECIMAL(10,2) NOT NULL
);

-- ADICIONANDO FOREIGN KEYS APÓS CRIAÇÃO DAS TABELAS:

-- IMOVEL
ALTER TABLE IMOVEL
ADD CONSTRAINT fk_imovel_empresa FOREIGN KEY (CNPJ) REFERENCES EMPRESA(CNPJ),
ADD CONSTRAINT fk_imovel_endereco FOREIGN KEY (ID_ENDERECO) REFERENCES ENDERECO(ID_ENDERECO),
ADD CONSTRAINT fk_imovel_proprietario FOREIGN KEY (CPF_PROPRIETARIO) REFERENCES PROPRIETARIO(CPF);

-- RESERVA
ALTER TABLE RESERVA
ADD CONSTRAINT fk_reserva_usuario FOREIGN KEY (CPF_USUARIO) REFERENCES USUARIO(CPF),
ADD CONSTRAINT fk_reserva_imovel FOREIGN KEY (ID_IMOVEL) REFERENCES IMOVEL(ID_IMOVEL);

-- PAGAMENTO
ALTER TABLE PAGAMENTO
ADD CONSTRAINT fk_pagamento_reserva FOREIGN KEY (ID_RESERVA) REFERENCES RESERVA(ID_RESERVA);

-- NOTA_FISCAL
ALTER TABLE NOTA_FISCAL
ADD CONSTRAINT fk_nota_fiscal_pagamento FOREIGN KEY (ID_PAGAMENTO) REFERENCES PAGAMENTO(ID_PAGAMENTO);

-- FUNCIONARIO
ALTER TABLE FUNCIONARIO
ADD CONSTRAINT fk_funcionario_empresa FOREIGN KEY (CNPJ) REFERENCES EMPRESA(CNPJ);

-- ANUNCIO
ALTER TABLE ANUNCIO
ADD CONSTRAINT fk_anuncio_empresa FOREIGN KEY (CNPJ) REFERENCES EMPRESA(CNPJ),
ADD CONSTRAINT fk_anuncio_imovel FOREIGN KEY (ID_IMOVEL) REFERENCES IMOVEL(ID_IMOVEL);
